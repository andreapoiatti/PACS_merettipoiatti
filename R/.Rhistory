library(fdaPDE)
#### Test 1: square domain ####
#            locations = nodes
#            laplacian
#            no covariates
#            no BC
#            order FE = 1
rm(list=ls())
graphics.off()
x = seq(0,1, length.out = 41)
y = x
locations = expand.grid(x,y)
mesh = create.mesh.2D(locations)
plot(mesh)
nnodes=dim(mesh$nodes)[1]
FEMbasis=create.FEM.basis(mesh)
# Test function
f = function(x, y, z = 1){
coe = function(x,y) 1/2*sin(5*pi*x)*exp(-x^2)+1
sin(2*pi*(coe(y,1)*x*cos(z-2)-y*sin(z-2)))*cos(2*pi*(coe(y,1)*x*cos(z-2+pi/2)+coe(x,1)*y*sin((z-2)*pi/2)))
}
# Exact solution (pointwise at nodes)
sol_exact=f(mesh$nodes[,1], mesh$nodes[,2])
image(FEM(sol_exact, FEMbasis))
# Add error to simulate data
set.seed(7893475)
ran=range(sol_exact)
data = sol_exact + rnorm(nnodes, mean=0, sd=0.05*abs(ran[2]-ran[1]))
# Set smoothing parameter
lambda= 10^seq(-6,-3,by=0.25)
#### Test 1.1: Without GCV
output_CPP<-smooth.FEM(observations=data, FEMbasis=FEMbasis, lambda=lambda)
image(output_CPP$fit.FEM)
